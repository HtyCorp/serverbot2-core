Step functions definition:
 * Find way to integrate API models into state CDK constructs: guarantee SFn is generating expected JSON

Discord relay:
 * Static SQS queue?

CodeBuild:
 * Use local build step bash scripts in buildpsec, instead of running commands directly?
 * Need to rethink accounts used in build to make testing better.

Ubuntu image locator:
 * Example URL ('_' value is epoch milli time): https://cloud-images.ubuntu.com/locator/ec2/releasesTable?_=1588837725000
 * JSON payload containing table of latest AMIs

Error handling:
 * service-framework needs CloudWatch integration: would be nice to have exception logging handled automatically with exception reason metrics

Command lambda:
 * May need separate command namespaces (i.e. interfaces) for different command permission levels (i.e. welcome, servers, admin, debug)

Maven:
 * Have a bunch of Lambdas with main classes defined in build: unnecessary and distracting since handlers have to be manually named anyway
 * Would be nice in concept to remove SDK dependencies from model modules: should ideally just be data classes

Reflection stuff:
 * Method references as "getter" functions for CDK and DDB mapping (apply functions to reference object containing path/attribute)
 X Doesn't work so well due to non-string field types as it turns out

Naming stuff:
 * DTO -> POJO

Config:
 * Should split 'public' and 'private' vars: e.g. nothing but Discord relay uses bot token, so why point out the secret for anyone else

Instance userdata:
 * Service start script needs absolute path for java11 (minecraft server is an issue otherwise)

Dynamo mapper:
 * Any further work to be extension on top of existing V2 enhanced client
 * Add null-check/`has()` method with reduced attributes to minimise data transfer
